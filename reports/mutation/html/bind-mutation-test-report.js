document.querySelector('mutation-test-report-app').report = {"files":{"/mnt/d/work/Otus_react/otus_react_game_of_life/src/App.tsx":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":18},"start":{"column":24,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { AuthScreen, GameScreen } from \"./screens\";\n\nexport const App: FC = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" exact>\n        <AuthScreen />\n      </Route>\n      <Route path=\"/game\">\n        <GameScreen />\n      </Route>\n    </BrowserRouter>\n  </Provider>\n);\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/Cell/Cell.stories.tsx":{"language":"typescript","mutants":[{"id":"1","location":{"end":{"column":2,"line":11},"start":{"column":16,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":33,"line":16},"start":{"column":21,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":2,"line":22},"start":{"column":36,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"6","location":{"end":{"column":34,"line":17},"start":{"column":27,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":30,"line":18},"start":{"column":22,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":28,"line":19},"start":{"column":21,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":16,"line":8},"start":{"column":10,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3","location":{"end":{"column":26,"line":10},"start":{"column":15,"line":10}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\nimport { withKnobs, select, number } from \"@storybook/addon-knobs\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport { Cell } from \".\";\r\nimport { CellState } from \".\";\r\n\r\nexport default {\r\n  title: \"Cell\",\r\n  component: Cell,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const CellStory: FC = () => {\r\n  return (\r\n    <Cell\r\n      state={select(\"Cell state\", CellState, CellState.alive)}\r\n      onCellClick={action(\"Click\")}\r\n      height={number(\"Height\", 20)}\r\n      width={number(\"Width\", 20)}\r\n    />\r\n  );\r\n};\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/Cell/Cell.styles.tsx":{"language":"typescript","mutants":[{"id":"9","location":{"end":{"column":2,"line":9},"start":{"column":23,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"10","location":{"end":{"column":2,"line":14},"start":{"column":22,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"12","location":{"end":{"column":25,"line":19},"start":{"column":5,"line":18}},"mutatorName":"ConditionalExpression","replacement":"case CellState.alive:","status":"Killed"},{"id":"11","location":{"end":{"column":2,"line":25},"start":{"column":77,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"14","location":{"end":{"column":45,"line":23},"start":{"column":5,"line":22}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Survived"},{"id":"16","location":{"end":{"column":2,"line":43},"start":{"column":3,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"13","location":{"end":{"column":24,"line":21},"start":{"column":5,"line":20}},"mutatorName":"ConditionalExpression","replacement":"case CellState.dead:","status":"Killed"},{"id":"15","location":{"end":{"column":43,"line":23},"start":{"column":23,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"17","location":{"end":{"column":34,"line":32},"start":{"column":12,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"18","location":{"end":{"column":36,"line":33},"start":{"column":13,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"19","location":{"end":{"column":41,"line":42},"start":{"column":5,"line":42}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import styled from \"@emotion/styled\";\r\nimport { css } from \"@emotion/core\";\r\nimport { SerializedStyles } from \"@emotion/serialize\";\r\nimport { CellState } from \"./CellState\";\r\n\r\nconst aliveStyle = css`\r\n  border-color: green;\r\n  background: green;\r\n`;\r\n\r\nconst deadStyle = css`\r\n  border-color: grey;\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst getStyle: (cellState: CellState) => SerializedStyles = (cellState) => {\r\n  switch (cellState) {\r\n    case CellState.alive:\r\n      return aliveStyle;\r\n    case CellState.dead:\r\n      return deadStyle;\r\n    default:\r\n      throw TypeError(\"Unknown cell state\");\r\n  }\r\n};\r\n\r\nexport const CellStyled = styled.button<{\r\n  cellState: CellState;\r\n  width: number;\r\n  height: number;\r\n}>`\r\n  width: ${(props) => props.width}px;\r\n  height: ${(props) => props.height}px;\r\n  border: 1px solid;\r\n  display: inline-block;\r\n  border-radius: 20px;\r\n  line-height: 25px;\r\n  margin: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  ${(props) => getStyle(props.cellState)};\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/ImageButton/ImageButton.stories.tsx":{"language":"typescript","mutants":[{"id":"23","location":{"end":{"column":2,"line":10},"start":{"column":16,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"24","location":{"end":{"column":24,"line":7},"start":{"column":10,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"25","location":{"end":{"column":26,"line":9},"start":{"column":15,"line":9}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"26","location":{"end":{"column":2,"line":22},"start":{"column":43,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":30,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"28","location":{"end":{"column":26,"line":17},"start":{"column":20,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":77,"line":17},"start":{"column":28,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"30","location":{"end":{"column":44,"line":17},"start":{"column":36,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":59,"line":17},"start":{"column":52,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"32","location":{"end":{"column":76,"line":17},"start":{"column":68,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"33","location":{"end":{"column":87,"line":17},"start":{"column":79,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"34","location":{"end":{"column":23,"line":18},"start":{"column":16,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"35","location":{"end":{"column":32,"line":18},"start":{"column":25,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"36","location":{"end":{"column":32,"line":19},"start":{"column":22,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"37","location":{"end":{"column":39,"line":19},"start":{"column":34,"line":19}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport { ImageButton } from \".\";\r\nimport { withKnobs, select, boolean, text  } from \"@storybook/addon-knobs\";\r\n\r\nexport default {\r\n  title: \"Image button\",\r\n  component: ImageButton,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const ImageButtonStory: FC = () => {\r\n\r\n  return (\r\n    <ImageButton\r\n      onClick={action(\"Click\")}\r\n      type={select(\"Type\", {submit:\"submit\", reset:\"reset\", button:\"button\"}, \"submit\")}\r\n\t  title={text('Title', 'title')}\r\n\t  disabled={boolean('Disabled', false)}\r\n    />\r\n  );\r\n};"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/Cell/Cell.tsx":{"language":"typescript","mutants":[{"id":"20","location":{"end":{"column":2,"line":19},"start":{"column":6,"line":11}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { FC } from \"react\";\r\nimport { CellStyled } from \"./Cell.styles\";\r\nimport { CellState } from \"./CellState\";\r\n\r\nexport const Cell: FC<{\r\n  state: CellState;\r\n  height: number;\r\n  width: number;\r\n  onCellClick: () => void;\r\n  name?: string;\r\n}> = ({ state, height, width, onCellClick, name }) => (\r\n  <CellStyled\r\n    name={name}\r\n    cellState={state}\r\n    height={height}\r\n    width={width}\r\n    onClick={onCellClick}\r\n  ></CellStyled>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/Cell/CellState.ts":{"language":"typescript","mutants":[{"id":"21","location":{"end":{"column":17,"line":2},"start":{"column":10,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"22","location":{"end":{"column":15,"line":3},"start":{"column":9,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export enum CellState {\r\n\talive = \"alive\",\r\n\tdead = \"dead\",\r\n}\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/ImageButton/ImageButton.styles.tsx":{"language":"typescript","mutants":[{"id":"38","location":{"end":{"column":2,"line":6},"start":{"column":61,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"39","location":{"end":{"column":43,"line":5},"start":{"column":14,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"40","location":{"end":{"column":2,"line":16},"start":{"column":42,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"}],"source":"import styled from \"@emotion/styled\";\r\n\r\nexport const ImageStyled = styled.img<{ disabled: boolean }>`\r\n  height: 2rem;\r\n  opacity: ${(p) => (p.disabled ? 0.4 : 1)};\r\n`;\r\n\r\nexport const ButtonStyled = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  padding: 0.5rem;\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/ImageButton/ImageButton.tsx":{"language":"typescript","mutants":[{"id":"41","location":{"end":{"column":2,"line":20},"start":{"column":6,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"42","location":{"end":{"column":29,"line":15},"start":{"column":12,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"43","location":{"end":{"column":29,"line":15},"start":{"column":12,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"44","location":{"end":{"column":18,"line":15},"start":{"column":16,"line":15}},"mutatorName":"LogicalOperator","replacement":"&&","status":"Survived"},{"id":"45","location":{"end":{"column":34,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"46","location":{"end":{"column":34,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"47","location":{"end":{"column":28,"line":16},"start":{"column":26,"line":16}},"mutatorName":"LogicalOperator","replacement":"&&","status":"Survived"},{"id":"48","location":{"end":{"column":34,"line":16},"start":{"column":29,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\nimport { ImageStyled, ButtonStyled } from \"./ImageButton.styles\";\r\nimport DefaultImg from \"./assets/default.svg\";\r\n\r\nexport const ImageButton: FC<{\r\n  src?: string;\r\n  type: \"submit\" | \"reset\" | \"button\";\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  title?: string;\r\n  name?: string;\r\n}> = ({ src, type, onClick, disabled, title, name }) => (\r\n  <ButtonStyled type={type} onClick={onClick} disabled={disabled} name={name}>\r\n    <ImageStyled\r\n      src={src || DefaultImg}\r\n      disabled={disabled || false}\r\n      title={title}\r\n    />\r\n  </ButtonStyled>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/SettingsPanel/SettingsPanel.stories.tsx":{"language":"typescript","mutants":[{"id":"50","location":{"end":{"column":2,"line":10},"start":{"column":16,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"51","location":{"end":{"column":26,"line":7},"start":{"column":10,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"52","location":{"end":{"column":26,"line":9},"start":{"column":15,"line":9}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"53","location":{"end":{"column":2,"line":30},"start":{"column":40,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"54","location":{"end":{"column":61,"line":15},"start":{"column":36,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"55","location":{"end":{"column":41,"line":16},"start":{"column":27,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"56","location":{"end":{"column":33,"line":17},"start":{"column":24,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"57","location":{"end":{"column":39,"line":17},"start":{"column":35,"line":17}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"58","location":{"end":{"column":10,"line":26},"start":{"column":9,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"59","location":{"end":{"column":34,"line":20},"start":{"column":26,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"60","location":{"end":{"column":62,"line":20},"start":{"column":52,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"61","location":{"end":{"column":32,"line":21},"start":{"column":25,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"62","location":{"end":{"column":60,"line":21},"start":{"column":50,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"63","location":{"end":{"column":39,"line":22},"start":{"column":28,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"64","location":{"end":{"column":66,"line":22},"start":{"column":56,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"65","location":{"end":{"column":45,"line":23},"start":{"column":31,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"66","location":{"end":{"column":72,"line":23},"start":{"column":62,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"67","location":{"end":{"column":43,"line":24},"start":{"column":34,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"68","location":{"end":{"column":70,"line":24},"start":{"column":60,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"69","location":{"end":{"column":40,"line":25},"start":{"column":29,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"70","location":{"end":{"column":68,"line":25},"start":{"column":58,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { GameSettings, SettingsPanel } from \".\";\r\nimport React, { FC } from \"react\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport { withKnobs, boolean, number } from \"@storybook/addon-knobs\";\r\n\r\nexport default {\r\n  title: \"Settings panel\",\r\n  component: SettingsPanel,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const SettingsStory: FC = () => {\r\n  return (\r\n    <SettingsPanel\r\n      setIsSettingsVisible={action(\"Set settings visibility\")}\r\n      setSettings={action(\"Set settings\")}\r\n      visible={boolean(\"Visible\", true)}\r\n      settings={\r\n        {\r\n          height: number(\"Height\", 300, undefined, \"Settings\"),\r\n          width: number(\"Width\", 300, undefined, \"Settings\"),\r\n          rowCount: number(\"Row count\", 10, undefined, \"Settings\"),\r\n          columnCount: number(\"Column count\", 10, undefined, \"Settings\"),\r\n          fillingPercent: number(\"Percent\", 50, undefined, \"Settings\"),\r\n          frequency: number(\"Frequency\", 100, undefined, \"Settings\"),\r\n        } as GameSettings\r\n      }\r\n    />\r\n  );\r\n};\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/SettingsPanel/Overlay.tsx":{"language":"typescript","mutants":[{"id":"49","location":{"end":{"column":2,"line":9},"start":{"column":28,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { FC } from \"react\";\r\nimport { OverlayStyled, OverlayChildrenStyled } from \"./SettingsPanel.styles\";\r\n\r\nexport const Overlay: FC = ({ children }) => (\r\n  <>\r\n    <OverlayStyled />\r\n    <OverlayChildrenStyled>{children}</OverlayChildrenStyled>\r\n  </>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/SettingsPanel/SettingsPanel.styles.tsx":{"language":"typescript","mutants":[{"id":"71","location":{"end":{"column":2,"line":6},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"72","location":{"end":{"column":2,"line":16},"start":{"column":59,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"73","location":{"end":{"column":2,"line":22},"start":{"column":59,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"74","location":{"end":{"column":2,"line":34},"start":{"column":39,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"75","location":{"end":{"column":2,"line":43},"start":{"column":41,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"76","location":{"end":{"column":2,"line":48},"start":{"column":46,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"77","location":{"end":{"column":2,"line":52},"start":{"column":53,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"78","location":{"end":{"column":2,"line":57},"start":{"column":52,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"80","location":{"end":{"column":2,"line":66},"start":{"column":40,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"79","location":{"end":{"column":2,"line":61},"start":{"column":38,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"81","location":{"end":{"column":2,"line":70},"start":{"column":40,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"82","location":{"end":{"column":2,"line":74},"start":{"column":54,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"}],"source":"import styled from \"@emotion/styled\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const OverlayChildrenStyled = styled(FlexContainer)`\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const OverlayStyled = styled(OverlayChildrenStyled)`\r\n  z-index: 10;\r\n  background: grey;\r\n  opacity: 0.5;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n  z-index: 10;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: fit-content;\r\n  padding: 0 1rem;\r\n  font-family: MONOSPACE;\r\n  font-size: 1.5rem;\r\n  box-shadow: 3px 3px 4px 2px #0e0e0e61;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  height: 2rem;\r\n  width: 4rem;\r\n  padding: 5px;\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const FieldsetStyled = styled.fieldset`\r\n  margin: 1rem 0;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const FieldsContainer = styled(FlexContainer)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const FieldContainer = styled(FlexContainer)`\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nexport const ImageStyled = styled.img`\r\n  height: 2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  display: contents;\r\n  width: 70px;\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\n  width: 50px;\r\n`;\r\n\r\nexport const ButtonsContainer = styled(FlexContainer)`\r\n  justify-content: flex-end;\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/SettingsPanel/SettingsPanel.tsx":{"language":"typescript","mutants":[{"id":"83","location":{"end":{"column":2,"line":79},"start":{"column":68,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"84","location":{"end":{"column":4,"line":27},"start":{"column":56,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"85","location":{"end":{"column":31,"line":26},"start":{"column":26,"line":26}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"86","location":{"end":{"column":15,"line":29},"start":{"column":7,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"87","location":{"end":{"column":15,"line":29},"start":{"column":7,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"88","location":{"end":{"column":15,"line":29},"start":{"column":7,"line":29}},"mutatorName":"BooleanLiteral","replacement":"visible","status":"Killed"},{"id":"89","location":{"end":{"column":4,"line":31},"start":{"column":17,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"90","location":{"end":{"column":57,"line":65},"start":{"column":24,"line":65}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"91","location":{"end":{"column":56,"line":65},"start":{"column":51,"line":65}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"}],"source":"import React, { FC } from \"react\";\r\nimport {\r\n  FormStyled,\r\n  ButtonsContainer,\r\n  FieldContainer,\r\n  LabelStyled,\r\n  FieldStyled,\r\n  FieldsContainer,\r\n} from \"./SettingsPanel.styles\";\r\nimport { Formik } from \"formik\";\r\nimport CancelImg from \"./assets/cancel_svg.svg\";\r\nimport OkImg from \"./assets/ok_svg.svg\";\r\nimport { GameSettings } from \".\";\r\nimport { XYSettingsSet } from \"./XYSettingsSet\";\r\nimport { ImageButton } from \"@/components/ImageButton\";\r\nimport { Overlay } from \"./Overlay\";\r\n\r\nexport const SettingsPanel: FC<{\r\n  visible: boolean;\r\n  settings: GameSettings;\r\n  setSettings: (settings: GameSettings) => void;\r\n  setIsSettingsVisible: (isVisible: boolean) => void;\r\n}> = ({ visible, settings, setSettings, setIsSettingsVisible }) => {\r\n  const onSubmitSettings = (settings: GameSettings) => {\r\n    setSettings(settings);\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Overlay>\r\n      <Formik\r\n        initialValues={settings}\r\n        onSubmit={onSubmitSettings}\r\n        key=\"settingsForm\"\r\n      >\r\n        <FormStyled>\r\n          <XYSettingsSet\r\n            legend=\"Размер окна, px\"\r\n            ySettingName=\"height\"\r\n            xSettngName=\"width\"\r\n          />\r\n          <XYSettingsSet\r\n            legend=\"Количество клеток\"\r\n            ySettingName=\"rowCount\"\r\n            xSettngName=\"columnCount\"\r\n          />\r\n          <FieldsContainer>\r\n            <FieldContainer>\r\n              <LabelStyled>Частота, х100 мсек</LabelStyled>\r\n              <FieldStyled type=\"number\" name=\"frequency\" />\r\n            </FieldContainer>\r\n            <FieldContainer>\r\n              <LabelStyled>max % заполненности</LabelStyled>\r\n              <FieldStyled type=\"number\" name=\"fillingPercent\" />\r\n            </FieldContainer>\r\n          </FieldsContainer>\r\n\r\n          <ButtonsContainer>\r\n            <ImageButton\r\n              type=\"button\"\r\n              onClick={() => setIsSettingsVisible(false)}\r\n              key=\"closeBtn\"\r\n              src={CancelImg}\r\n            ></ImageButton>\r\n            <ImageButton\r\n              type=\"submit\"\r\n              key=\"submitBtn\"\r\n              src={OkImg}\r\n            ></ImageButton>\r\n          </ButtonsContainer>\r\n        </FormStyled>\r\n      </Formik>\r\n    </Overlay>\r\n  );\r\n};\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/index.tsx":{"language":"typescript","mutants":[{"id":"93","location":{"end":{"column":2,"line":8},"start":{"column":24,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\n\r\n\r\nexport const App: FC = () => (\r\n  <p>\r\n    Hello there\r\n  </p>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/index.tsx":{"language":"typescript","mutants":[{"id":"94","location":{"end":{"column":47,"line":8},"start":{"column":41,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React from \"react\";\nimport { render } from \"react-dom\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Auth/Auth.styles.tsx":{"language":"typescript","mutants":[{"id":"95","location":{"end":{"column":2,"line":11},"start":{"column":38,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"96","location":{"end":{"column":2,"line":17},"start":{"column":40,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"97","location":{"end":{"column":2,"line":27},"start":{"column":42,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"98","location":{"end":{"column":2,"line":34},"start":{"column":40,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"}],"source":"import styled from \"@emotion/styled\";\r\n\r\nexport const FormStyled = styled.form`\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  font-family: MONOSPACE;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const NameContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const GenderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & > * {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nexport const FieldStyled = styled.input`\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  padding: 0 5px;\r\n  margin-left: 1rem;\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/components/SettingsPanel/XYSettingsSet.tsx":{"language":"typescript","mutants":[{"id":"92","location":{"end":{"column":2,"line":30},"start":{"column":6,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { FC } from \"react\";\r\nimport {\r\n  FieldsetStyled,\r\n  FieldsContainer,\r\n  FieldContainer,\r\n  FieldStyled,\r\n  ImageStyled,\r\n} from \"./SettingsPanel.styles\";\r\nimport VArrowsImg from \"./assets/v_arrows_svg.svg\";\r\nimport HArrowsImg from \"./assets/h_arrows_svg.svg\";\r\n\r\nexport const XYSettingsSet: FC<{\r\n  legend: string;\r\n  ySettingName: string;\r\n  xSettngName: string;\r\n}> = ({ legend, ySettingName, xSettngName }) => (\r\n  <FieldsetStyled>\r\n    <legend>{legend}</legend>\r\n    <FieldsContainer>\r\n      <FieldContainer>\r\n        <ImageStyled src={VArrowsImg} />\r\n        <FieldStyled type=\"number\" name={ySettingName} />\r\n      </FieldContainer>\r\n      <FieldContainer>\r\n        <ImageStyled src={HArrowsImg} />\r\n        <FieldStyled type=\"number\" name={xSettngName} />\r\n      </FieldContainer>\r\n    </FieldsContainer>\r\n  </FieldsetStyled>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Auth/Auth.tsx":{"language":"typescript","mutants":[{"id":"99","location":{"end":{"column":3,"line":25},"start":{"column":25,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"100","location":{"end":{"column":2,"line":25},"start":{"column":47,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"102","location":{"end":{"column":2,"line":114},"start":{"column":7,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"101","location":{"end":{"column":2,"line":31},"start":{"column":28,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"103","location":{"end":{"column":6,"line":48},"start":{"column":14,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"104","location":{"end":{"column":53,"line":47},"start":{"column":15,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"105","location":{"end":{"column":36,"line":49},"start":{"column":5,"line":49}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"106","location":{"end":{"column":6,"line":54},"start":{"column":25,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"107","location":{"end":{"column":18,"line":55},"start":{"column":5,"line":55}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"108","location":{"end":{"column":6,"line":60},"start":{"column":25,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"109","location":{"end":{"column":20,"line":61},"start":{"column":5,"line":61}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"110","location":{"end":{"column":4,"line":66},"start":{"column":19,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"111","location":{"end":{"column":21,"line":66},"start":{"column":6,"line":66}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"112","location":{"end":{"column":36,"line":69},"start":{"column":32,"line":69}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"113","location":{"end":{"column":41,"line":84},"start":{"column":20,"line":84}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"114","location":{"end":{"column":41,"line":84},"start":{"column":20,"line":84}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"115","location":{"end":{"column":34,"line":84},"start":{"column":31,"line":84}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"116","location":{"end":{"column":41,"line":84},"start":{"column":35,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"117","location":{"end":{"column":15,"line":88},"start":{"column":12,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":43,"line":92},"start":{"column":20,"line":92}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"119","location":{"end":{"column":43,"line":92},"start":{"column":20,"line":92}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"120","location":{"end":{"column":34,"line":92},"start":{"column":31,"line":92}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"121","location":{"end":{"column":43,"line":92},"start":{"column":35,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"122","location":{"end":{"column":15,"line":96},"start":{"column":12,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":42,"line":100},"start":{"column":20,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"124","location":{"end":{"column":42,"line":100},"start":{"column":20,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"125","location":{"end":{"column":34,"line":100},"start":{"column":31,"line":100}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"126","location":{"end":{"column":42,"line":100},"start":{"column":35,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"127","location":{"end":{"column":15,"line":104},"start":{"column":12,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { FC, useCallback, ChangeEvent, useEffect } from \"react\";\r\nimport {\r\n  FormStyled,\r\n  NameContainer,\r\n  FieldStyled,\r\n  GenderContainer,\r\n} from \"./Auth.styles\";\r\nimport GameImg from \"./assets/game.svg\";\r\nimport { ImageButton } from \"@/components/ImageButton\";\r\nimport { Gender } from \"@/modules/Game\";\r\nimport { AppState } from \"@/store\";\r\nimport {\r\n  setUserName,\r\n  setUserGender,\r\n  setUser,\r\n  getStoredUser,\r\n} from \"./authReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  userName: state.auth.userName,\r\n  userGender: state.auth.userGender,\r\n  user: state.auth.user,\r\n});\r\nconst mapDispatchToProps = {\r\n  setUserName,\r\n  setUserGender,\r\n  setUser,\r\n  getStoredUser,\r\n};\r\n\r\ntype AuthProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\nconst AuthInternal: FC<AuthProps> = ({\r\n  userName,\r\n  userGender,\r\n  user,\r\n  setUserName,\r\n  setUserGender,\r\n  setUser,\r\n  getStoredUser,\r\n}) => {\r\n  const onSubmit = useCallback(\r\n    (evt) => {\r\n      evt.preventDefault();\r\n      setUser({ name: userName, gender: userGender });\r\n    },\r\n    [userName, userGender, setUser]\r\n  );\r\n  const onChangeName = useCallback(\r\n    (e: ChangeEvent) => {\r\n\t  setUserName((e.target as any).value);\r\n    },\r\n    [setUserName]\r\n  );\r\n  const onChangeGender = useCallback(\r\n    (e: ChangeEvent) => {\r\n      setUserGender((e.target as any).value as Gender);\r\n    },\r\n    [setUserGender]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getStoredUser();\r\n  }, [getStoredUser]);\r\n\r\n  return user ? (\r\n    <Redirect to=\"/game\" push={true} />\r\n  ) : (\r\n    <FormStyled name=\"authForm\" onSubmit={onSubmit}>\r\n      <NameContainer>\r\n        <label>Привет, </label>\r\n        <FieldStyled\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={onChangeName}\r\n        />\r\n      </NameContainer>\r\n      <GenderContainer>\r\n        <input\r\n          type=\"radio\"\r\n          checked={userGender === \"male\"}\r\n          value=\"male\"\r\n          name=\"gender\"\r\n          onChange={onChangeGender}\r\n        />{\" \"}\r\n        М\r\n        <input\r\n          type=\"radio\"\r\n          checked={userGender === \"female\"}\r\n          value=\"female\"\r\n          name=\"gender\"\r\n          onChange={onChangeGender}\r\n        />{\" \"}\r\n        Ж\r\n        <input\r\n          type=\"radio\"\r\n          checked={userGender === \"robot\"}\r\n          value=\"robot\"\r\n          name=\"gender\"\r\n          onChange={onChangeGender}\r\n        />{\" \"}\r\n        Нет\r\n      </GenderContainer>\r\n      <ImageButton\r\n        title=\"Let's play!\"\r\n        type=\"submit\"\r\n        src={GameImg}\r\n      ></ImageButton>\r\n    </FormStyled>\r\n  );\r\n};\r\n\r\nexport const Auth = connect(mapStateToProps, mapDispatchToProps)(AuthInternal);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Auth/authReducer.ts":{"language":"typescript","mutants":[{"id":"128","location":{"end":{"column":2,"line":14},"start":{"column":41,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"129","location":{"end":{"column":14,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"131","location":{"end":{"column":2,"line":42},"start":{"column":31,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"130","location":{"end":{"column":21,"line":12},"start":{"column":14,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"132","location":{"end":{"column":14,"line":17},"start":{"column":8,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"133","location":{"end":{"column":3,"line":41},"start":{"column":12,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"134","location":{"end":{"column":4,"line":22},"start":{"column":30,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"135","location":{"end":{"column":4,"line":25},"start":{"column":32,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"136","location":{"end":{"column":4,"line":34},"start":{"column":26,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"137","location":{"end":{"column":22,"line":27},"start":{"column":8,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"138","location":{"end":{"column":22,"line":27},"start":{"column":8,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"139","location":{"end":{"column":5,"line":33},"start":{"column":24,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"140","location":{"end":{"column":23,"line":30},"start":{"column":9,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"141","location":{"end":{"column":23,"line":30},"start":{"column":9,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"142","location":{"end":{"column":16,"line":30},"start":{"column":14,"line":30}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"143","location":{"end":{"column":6,"line":32},"start":{"column":25,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"144","location":{"end":{"column":35,"line":31},"start":{"column":19,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"145","location":{"end":{"column":5,"line":40},"start":{"column":17,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"146","location":{"end":{"column":23,"line":37},"start":{"column":21,"line":37}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"147","location":{"end":{"column":30,"line":38},"start":{"column":23,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Gender, User } from \"@/modules/Game\";\r\n\r\nexport interface AuthState {\r\n\tuserName: string;\r\n\tuserGender: Gender;\r\n\tuser: User | null;\r\n}\r\n\r\nexport const initAuthState: AuthState = {\r\n\tuserName: \"\",\r\n\tuserGender: \"robot\",\r\n\tuser: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n\tname: \"auth\",\r\n\tinitialState: initAuthState,\r\n\treducers: {\r\n\t\tsetUserName(state, action) {\r\n\t\t\tstate.userName = action.payload;\r\n\t\t},\r\n\t\tsetUserGender(state, action) {\r\n\t\t\tstate.userGender = action.payload;\r\n\t\t},\r\n\t\tsetUser(state, action) {\r\n\t\t\tif (action.payload) {\r\n\t\t\t\tconst { name, gender } = action.payload;\r\n\r\n\t\t\t\tif (name && gender) {\r\n\t\t\t\t\tstate.user = { name, gender };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetStoredUser(_) { },\r\n\t\tlogout(state) {\r\n\t\t\tstate.userName = \"\";\r\n\t\t\tstate.userGender = \"robot\";\r\n\t\t\tstate.user = null;\r\n\t\t },\r\n\t}\r\n});\r\n\r\nexport const {\r\n\tsetUserName,\r\n\tsetUserGender,\r\n\tsetUser,\r\n\tgetStoredUser,\r\n\tlogout,\r\n} = authSlice.actions;\r\nexport const authReducer = authSlice.reducer;"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Auth/authSaga.ts":{"language":"typescript","mutants":[{"id":"148","location":{"end":{"column":2,"line":19},"start":{"column":21,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"149","location":{"end":{"column":10,"line":14},"start":{"column":6,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"150","location":{"end":{"column":10,"line":14},"start":{"column":6,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"152","location":{"end":{"column":2,"line":32},"start":{"column":57,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"151","location":{"end":{"column":3,"line":18},"start":{"column":12,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"153","location":{"end":{"column":3,"line":26},"start":{"column":29,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"154","location":{"end":{"column":37,"line":29},"start":{"column":3,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"155","location":{"end":{"column":37,"line":29},"start":{"column":3,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"156","location":{"end":{"column":54,"line":31},"start":{"column":38,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"157","location":{"end":{"column":52,"line":31},"start":{"column":48,"line":31}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"158","location":{"end":{"column":73,"line":31},"start":{"column":71,"line":31}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"159","location":{"end":{"column":2,"line":43},"start":{"column":58,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"160","location":{"end":{"column":71,"line":38},"start":{"column":69,"line":38}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"161","location":{"end":{"column":2,"line":47},"start":{"column":22,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"162","location":{"end":{"column":2,"line":53},"start":{"column":29,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { setUser, setUserName, setUserGender, getStoredUser, logout } from \"./authReducer\";\r\nimport { localStorageAuth as authService } from \"./authService\";\r\nimport { setUserpic } from \"@/modules/Game\";\r\nimport Avatars, { SpriteCollection } from \"@dicebear/avatars\";\r\n\r\nimport { default as spritesMale } from \"@dicebear/avatars-male-sprites\";\r\nimport { default as spritesFemale } from \"@dicebear/avatars-female-sprites\";\r\nimport { default as spritesBottts } from \"@dicebear/avatars-bottts-sprites\";\r\n\r\nfunction* getUser() {\r\n\tconst user = authService.getLoggedInUser();\r\n\r\n\tif (user) {\r\n\t\tyield put(setUserName(user.name));\r\n\t\tyield put(setUserGender(user.gender));\r\n\t\tyield put(setUser(user));\r\n\t}\r\n}\r\n\r\nexport function createAvatar(gender: any, name: string) {\r\n\tconst spriteHandler: any = {\r\n\t\trobot: spritesBottts,\r\n\t\tmale: spritesMale,\r\n\t\tfemale: spritesFemale,\r\n\t};\r\n\r\n\tconst sprite: SpriteCollection | undefined =\r\n\t\tspriteHandler[gender] ?? undefined;\r\n\r\n\treturn sprite ? new Avatars(sprite, { base64: true }).create(name) : \"\";\r\n}\r\n\r\nfunction* login({ payload }: ReturnType<typeof setUser>) {\r\n\tconst gender = payload?.gender;\r\n\tconst name = payload?.name;\r\n\r\n\tconst userPicSvg = name ? yield call(createAvatar, gender, name) : \"\";\r\n\r\n\tyield put(setUserpic(userPicSvg));\r\n\r\n\tauthService.login(payload);\r\n}\r\n\r\nfunction* doLogout() {\r\n\tauthService.logout();\r\n}\r\n\r\nexport function* authSaga() {\r\n\tyield takeEvery(getStoredUser.type, getUser);\r\n\tyield takeEvery(setUser.type, login);\r\n\tyield takeEvery(logout.type, doLogout);\r\n}"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Auth/authService.ts":{"language":"typescript","mutants":[{"id":"163","location":{"end":{"column":43,"line":10},"start":{"column":33,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"164","location":{"end":{"column":47,"line":11},"start":{"column":35,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":3,"line":23},"start":{"column":20,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"166","location":{"end":{"column":60,"line":14},"start":{"column":16,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"167","location":{"end":{"column":60,"line":14},"start":{"column":16,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"168","location":{"end":{"column":60,"line":14},"start":{"column":58,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"169","location":{"end":{"column":67,"line":16},"start":{"column":4,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"170","location":{"end":{"column":67,"line":16},"start":{"column":4,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"171","location":{"end":{"column":67,"line":16},"start":{"column":60,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"172","location":{"end":{"column":11,"line":18},"start":{"column":7,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"173","location":{"end":{"column":11,"line":18},"start":{"column":7,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"174","location":{"end":{"column":4,"line":20},"start":{"column":13,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"175","location":{"end":{"column":27,"line":19},"start":{"column":11,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"176","location":{"end":{"column":3,"line":28},"start":{"column":11,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"177","location":{"end":{"column":3,"line":37},"start":{"column":20,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"178","location":{"end":{"column":35,"line":31},"start":{"column":7,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"179","location":{"end":{"column":35,"line":31},"start":{"column":7,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"180","location":{"end":{"column":21,"line":31},"start":{"column":19,"line":31}},"mutatorName":"LogicalOperator","replacement":"&&","status":"Killed"},{"id":"181","location":{"end":{"column":18,"line":31},"start":{"column":7,"line":31}},"mutatorName":"BooleanLiteral","replacement":"user?.name","status":"Killed"},{"id":"182","location":{"end":{"column":35,"line":31},"start":{"column":22,"line":31}},"mutatorName":"BooleanLiteral","replacement":"user?.gender","status":"Killed"},{"id":"183","location":{"end":{"column":4,"line":33},"start":{"column":37,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import { User, Gender } from \"@/modules/Game\";\r\n\r\ninterface AuthService {\r\n\tlogin: (user: User) => void;\r\n\tgetLoggedInUser: () => User | undefined;\r\n\tlogout: () => void;\r\n}\r\n\r\nclass LocalStorageAuthService implements AuthService {\r\n\treadonly userNameKey: string = \"userName\";\r\n\treadonly userGenderKey: string = \"userGender\";\r\n\r\n\tgetLoggedInUser() {\r\n\t\tconst name = localStorage.getItem(this.userNameKey) ?? \"\";\r\n\t\tconst gender =\r\n\t\t\t(localStorage.getItem(this.userGenderKey) as Gender) ?? \"robot\";\r\n\r\n\t\tif (name) {\r\n\t\t\treturn { name, gender } as User;\r\n\t\t}\r\n\r\n\t\treturn void 0;\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tlocalStorage.removeItem(this.userNameKey);\r\n\t\tlocalStorage.removeItem(this.userGenderKey);\r\n\t}\r\n\r\n\tlogin(user: User) {\r\n\t\tif (!user?.name || !user?.gender) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(this.userNameKey, user.name);\r\n\t\tlocalStorage.setItem(this.userGenderKey, user.gender);\r\n\t}\r\n}\r\n\r\nexport const localStorageAuth = new LocalStorageAuthService();\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/Field/Field.stories.tsx":{"language":"typescript","mutants":[{"id":"184","location":{"end":{"column":2,"line":14},"start":{"column":16,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"185","location":{"end":{"column":17,"line":11},"start":{"column":10,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"186","location":{"end":{"column":26,"line":13},"start":{"column":15,"line":13}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"187","location":{"end":{"column":2,"line":29},"start":{"column":37,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":6,"line":22},"start":{"column":14,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"189","location":{"end":{"column":69,"line":19},"start":{"column":7,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"190","location":{"end":{"column":67,"line":19},"start":{"column":16,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"191","location":{"end":{"column":67,"line":20},"start":{"column":7,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"192","location":{"end":{"column":65,"line":20},"start":{"column":16,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"193","location":{"end":{"column":68,"line":21},"start":{"column":7,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":66,"line":21},"start":{"column":16,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\nimport { withKnobs, number } from \"@storybook/addon-knobs\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport { Field } from \"./Field\";\r\nimport { CellState } from \"@/components/Cell\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"@/store\";\r\nimport { setField } from \"../gameReducer\";\r\n\r\nexport default {\r\n  title: \"Field\",\r\n  component: Field,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const FieldStory: FC = () => {\r\n  store.dispatch(\r\n    setField([\r\n      { cells: [CellState.alive, CellState.alive, CellState.alive] },\r\n      { cells: [CellState.dead, CellState.alive, CellState.dead] },\r\n      { cells: [CellState.alive, CellState.dead, CellState.alive] },\r\n    ])\r\n  );\r\n  return (\r\n    <Provider store={store}>\r\n      <Field />\r\n    </Provider>\r\n  );\r\n};\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/Field/Field.styles.tsx":{"language":"typescript","mutants":[{"id":"195","location":{"end":{"column":2,"line":15},"start":{"column":73,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"196","location":{"end":{"column":28,"line":4},"start":{"column":13,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"198","location":{"end":{"column":2,"line":20},"start":{"column":36,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"197","location":{"end":{"column":26,"line":5},"start":{"column":12,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import styled from \"@emotion/styled\";\r\n\r\nexport const FieldStyled = styled.div<{ height: number; width: number }>`\r\n  height: ${(p) => p.height}px;\r\n  width: ${(p) => p.width}px;\r\n  padding: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 3px 3px 4px 2px #0e0e0e61;\r\n  overflow: overlay;\r\n  border-radius: 20px;\r\n  background-color: white;\r\n`;\r\n\r\nexport const RowStyled = styled.div`\r\n  display: flex;\r\n  align-items: start;\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/Field/Field.tsx":{"language":"typescript","mutants":[{"id":"199","location":{"end":{"column":3,"line":19},"start":{"column":25,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"200","location":{"end":{"column":2,"line":19},"start":{"column":47,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"201","location":{"end":{"column":55,"line":21},"start":{"column":28,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"202","location":{"end":{"column":2,"line":58},"start":{"column":7,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"203","location":{"end":{"column":6,"line":37},"start":{"column":45,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"204","location":{"end":{"column":43,"line":36},"start":{"column":21,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"206","location":{"end":{"column":8,"line":55},"start":{"column":18,"line":42}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"205","location":{"end":{"column":20,"line":38},"start":{"column":5,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"207","location":{"end":{"column":12,"line":53},"start":{"column":26,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"208","location":{"end":{"column":65,"line":51},"start":{"column":28,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { FC, useCallback } from \"react\";\r\nimport { RowStyled, FieldStyled } from \"./Field.styles\";\r\nimport { Cell } from \"@/components/Cell\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"@/store\";\r\nimport {\r\n  setField,\r\n  makeCellAlive,\r\n  getCellHeight,\r\n  getCellWidth,\r\n} from \"../gameReducer\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  field: state.game.field,\r\n  fieldHeight: state.game.settings.height,\r\n  fieldWidht: state.game.settings.width,\r\n  cellHeight: getCellHeight(state),\r\n  cellWidht: getCellWidth(state),\r\n});\r\n\r\nconst mapDispatchToProps = { setField, makeCellAlive };\r\n\r\ntype FieldProps = ReturnType<typeof mapStateToProps> &\r\n  typeof mapDispatchToProps;\r\n\r\nconst FieldInternal: FC<FieldProps> = ({\r\n  makeCellAlive,\r\n  fieldHeight,\r\n  fieldWidht,\r\n  field,\r\n  cellHeight,\r\n  cellWidht,\r\n}) => {\r\n  const onCellClick = useCallback(\r\n    (colIndex: number, rowIndex: number) => {\r\n      makeCellAlive({ colIndex, rowIndex });\r\n    },\r\n    [makeCellAlive]\r\n  );\r\n  return (\r\n    <FieldStyled width={fieldWidht} height={fieldHeight}>\r\n      {field.map((row, rowIndex) => (\r\n        <RowStyled key={rowIndex}>\r\n          {row.cells.map((cell, colIndex) => (\r\n            <Cell\r\n              name=\"cell\"\r\n              key={colIndex}\r\n              state={cell}\r\n              height={cellHeight}\r\n              width={cellWidht}\r\n              onCellClick={() => onCellClick(colIndex, rowIndex)}\r\n            />\r\n          ))}\r\n        </RowStyled>\r\n      ))}\r\n    </FieldStyled>\r\n  );\r\n};\r\n\r\nexport const Field = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FieldInternal);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/Game.styles.tsx":{"language":"typescript","mutants":[{"id":"209","location":{"end":{"column":2,"line":6},"start":{"column":40,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"210","location":{"end":{"column":2,"line":13},"start":{"column":40,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"211","location":{"end":{"column":2,"line":26},"start":{"column":41,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"212","location":{"end":{"column":2,"line":35},"start":{"column":45,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"213","location":{"end":{"column":2,"line":40},"start":{"column":44,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"214","location":{"end":{"column":2,"line":50},"start":{"column":42,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"215","location":{"end":{"column":2,"line":55},"start":{"column":43,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"216","location":{"end":{"column":2,"line":60},"start":{"column":38,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"}],"source":"import styled from \"@emotion/styled\";\r\n\r\nexport const GameContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FieldContainer = styled.div`\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background-color: #cccccc;\r\n  border-right: 2px solid #c3c3c3;\r\n  border-bottom: 2px solid #c3c3c3;\r\n  border-radius: 0 0 20px 0;\r\n  box-shadow: 0px 0px 10px 18px #f1f1f1;\r\n`;\r\n\r\nexport const RightSideContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #ece8e8;\r\n  width: 80px;\r\n`;\r\n\r\nexport const SettingsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  display: flex;\r\n  height: 80px;\r\n  background-color: #ece8e8;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-family: MONOSPACE;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const ImageStyled = styled.img`\r\n  height: 60px;\r\n  margin-bottom: 20px;\r\n`;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/Game.tsx":{"language":"typescript","mutants":[{"id":"217","location":{"end":{"column":3,"line":29},"start":{"column":25,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"218","location":{"end":{"column":2,"line":29},"start":{"column":47,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"219","location":{"end":{"column":2,"line":40},"start":{"column":28,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"220","location":{"end":{"column":2,"line":117},"start":{"column":7,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"221","location":{"end":{"column":28,"line":61},"start":{"column":23,"line":61}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"222","location":{"end":{"column":4,"line":65},"start":{"column":46,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"223","location":{"end":{"column":37,"line":65},"start":{"column":6,"line":65}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"224","location":{"end":{"column":4,"line":69},"start":{"column":45,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"225","location":{"end":{"column":30,"line":68},"start":{"column":26,"line":68}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"226","location":{"end":{"column":28,"line":69},"start":{"column":6,"line":69}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"227","location":{"end":{"column":4,"line":73},"start":{"column":37,"line":71}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"228","location":{"end":{"column":13,"line":73},"start":{"column":6,"line":73}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"229","location":{"end":{"column":4,"line":77},"start":{"column":41,"line":75}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"230","location":{"end":{"column":16,"line":77},"start":{"column":6,"line":77}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"231","location":{"end":{"column":4,"line":81},"start":{"column":41,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"232","location":{"end":{"column":16,"line":81},"start":{"column":6,"line":81}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"233","location":{"end":{"column":4,"line":85},"start":{"column":40,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"234","location":{"end":{"column":14,"line":85},"start":{"column":6,"line":85}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React, { FC, useState, useCallback } from \"react\";\r\nimport { GameContainer } from \"./Game.styles\";\r\nimport { MainLayout } from \"./MainLayout\";\r\nimport { RightSideLayout } from \"./RightSideLayout\";\r\nimport { SettingsPanel } from \"@/components/SettingsPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"@/store\";\r\nimport {\r\n  playGame,\r\n  stopGame,\r\n  setIsSettingsVisible,\r\n  reset,\r\n  setSettings,\r\n  nextStep,\r\n  prevStep,\r\n  gameSelectors,\r\n} from \"./gameReducer\";\r\nimport { logout } from \"@/modules/Auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  isPlaying: state.game.isPlaying,\r\n  userpic: state.game.userpic,\r\n  user: state.auth.user,\r\n  isSettingsVisible: state.game.isSettingsVisible,\r\n  gameSettings: state.game.settings,\r\n  hasNextStep: gameSelectors.hasNextStep(state),\r\n  hasPrevStep: gameSelectors.hasPrevStep(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  playGame,\r\n  stopGame,\r\n  setIsSettingsVisible,\r\n  reset,\r\n  setSettings,\r\n  logout,\r\n  nextStep,\r\n  prevStep,\r\n};\r\n\r\ntype GameProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\nconst GameInternal: FC<GameProps> = ({\r\n  isPlaying,\r\n  playGame,\r\n  stopGame,\r\n  setIsSettingsVisible,\r\n  reset,\r\n  userpic,\r\n  user,\r\n  setSettings,\r\n  gameSettings,\r\n  isSettingsVisible,\r\n  logout,\r\n  nextStep,\r\n  prevStep,\r\n  hasPrevStep,\r\n  hasNextStep,\r\n}) => {\r\n  const [] = useState(false);\r\n\r\n  const onClickPlayPause = useCallback(() => {\r\n    isPlaying ? stopGame() : playGame();\r\n  }, [isPlaying, stopGame, playGame]);\r\n\r\n  const onClickSettings = useCallback(() => {\r\n    setIsSettingsVisible(true);\r\n  }, [setIsSettingsVisible]);\r\n\r\n  const onReset = useCallback(() => {\r\n    reset();\r\n  }, [reset]);\r\n\r\n  const onClickNext = useCallback(() => {\r\n    nextStep();\r\n  }, [nextStep]);\r\n\r\n  const onClickPrev = useCallback(() => {\r\n    prevStep();\r\n  }, [prevStep]);\r\n\r\n  const onDoLogout = useCallback(() => {\r\n    logout();\r\n  }, [logout]);\r\n\r\n  return user ? (\r\n    <>\r\n      <SettingsPanel\r\n        key=\"settingsWindow\"\r\n        setIsSettingsVisible={setIsSettingsVisible}\r\n        setSettings={setSettings}\r\n        settings={gameSettings}\r\n        visible={isSettingsVisible}\r\n      />\r\n      <GameContainer>\r\n        <MainLayout\r\n          onClickPlayPause={onClickPlayPause}\r\n          onClickNext={onClickNext}\r\n          onClickPrev={onClickPrev}\r\n          isPlaying={isPlaying}\r\n          userName={user.name}\r\n          hasPrevStep={hasPrevStep}\r\n          hasNextStep={hasNextStep}\r\n        />\r\n        <RightSideLayout\r\n          onClickSettings={onClickSettings}\r\n          onReset={onReset}\r\n          onLogout={onDoLogout}\r\n          userPic={userpic}\r\n        />\r\n      </GameContainer>\r\n    </>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n};\r\n\r\nexport const Game = connect(mapStateToProps, mapDispatchToProps)(GameInternal);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/MainLayout.tsx":{"language":"typescript","mutants":[{"id":"235","location":{"end":{"column":2,"line":66},"start":{"column":6,"line":24}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"236","location":{"end":{"column":33,"line":42},"start":{"column":21,"line":42}},"mutatorName":"BooleanLiteral","replacement":"hasPrevStep","status":"Killed"},{"id":"237","location":{"end":{"column":33,"line":59},"start":{"column":21,"line":59}},"mutatorName":"BooleanLiteral","replacement":"hasNextStep","status":"Killed"}],"source":"import React, { FC } from \"react\";\r\nimport {\r\n  MainContainer,\r\n  BottomContainer,\r\n  ButtonsContainer,\r\n  FieldContainer,\r\n} from \"./Game.styles\";\r\n\r\nimport PlayImg from \"./assets/play_pause.svg\";\r\nimport PauseImg from \"./assets/pause.svg\";\r\nimport BackImg from \"./assets/back.svg\";\r\nimport ForwardImg from \"./assets/forward.svg\";\r\nimport { Field } from \"./Field/Field\";\r\nimport { ImageButton } from \"@/components/ImageButton\";\r\n\r\nexport const MainLayout: FC<{\r\n  onClickPlayPause: () => void;\r\n  onClickNext: () => void;\r\n  onClickPrev: () => void;\r\n  userName: string;\r\n  isPlaying: boolean;\r\n  hasPrevStep: boolean;\r\n  hasNextStep: boolean;\r\n}> = ({\r\n  onClickPlayPause,\r\n  onClickNext,\r\n  onClickPrev,\r\n  userName,\r\n  isPlaying,\r\n  hasPrevStep,\r\n  hasNextStep,\r\n}) => (\r\n  <MainContainer>\r\n    <FieldContainer>\r\n      <Field key=\"field\" />\r\n    </FieldContainer>\r\n    <BottomContainer>\r\n      <ButtonsContainer>\r\n        <ImageButton\r\n          src={BackImg}\r\n          type=\"button\"\r\n          disabled={!hasPrevStep}\r\n          title=\"Previous state\"\r\n          key=\"prev\"\r\n          onClick={onClickPrev}\r\n        ></ImageButton>\r\n        <ImageButton\r\n          key=\"playBtn\"\r\n          src={isPlaying ? PauseImg : PlayImg}\r\n          type=\"button\"\r\n          title=\"Play\"\r\n          onClick={onClickPlayPause}\r\n        ></ImageButton>\r\n        <ImageButton\r\n          src={ForwardImg}\r\n          type=\"button\"\r\n          title=\"Next state\"\r\n          key=\"next\"\r\n          disabled={!hasNextStep}\r\n          onClick={onClickNext}\r\n        ></ImageButton>\r\n      </ButtonsContainer>\r\n      {userName}\r\n    </BottomContainer>\r\n  </MainContainer>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/RightSideLayout.tsx":{"language":"typescript","mutants":[{"id":"238","location":{"end":{"column":2,"line":47},"start":{"column":6,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"239","location":{"end":{"column":58,"line":45},"start":{"column":6,"line":45}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"240","location":{"end":{"column":58,"line":45},"start":{"column":6,"line":45}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"241","location":{"end":{"column":16,"line":45},"start":{"column":14,"line":45}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"}],"source":"import React, { FC } from \"react\";\r\nimport {\r\n  RightSideContainer,\r\n  SettingsContainer,\r\n  ImageStyled,\r\n} from \"./Game.styles\";\r\nimport SettingsImg from \"./assets/settings_svg.svg\";\r\n\r\nimport LogoutImg from \"./assets/reset.svg\";\r\nimport ResetImg from \"./assets/recycle.svg\";\r\nimport { ImageButton } from \"@/components/ImageButton\";\r\n\r\nexport const RightSideLayout: FC<{\r\n  onClickSettings: () => void;\r\n  onReset: () => void;\r\n  onLogout: () => void;\r\n  userPic?: string;\r\n}> = ({ onClickSettings, onReset, onLogout, userPic }) => (\r\n  <RightSideContainer>\r\n    <SettingsContainer>\r\n      <ImageButton\r\n        key=\"settingsBtn\"\r\n        name=\"settings\"\r\n        src={SettingsImg}\r\n        type=\"button\"\r\n        title=\"Settings\"\r\n        onClick={onClickSettings}\r\n      ></ImageButton>\r\n      <ImageButton\r\n        key=\"resetBtn\"\r\n        src={ResetImg}\r\n        type=\"button\"\r\n        title=\"Reset field\"\r\n        onClick={onReset}\r\n      ></ImageButton>\r\n      <ImageButton\r\n        key=\"logoutBtn\"\r\n        name=\"logout\"\r\n        src={LogoutImg}\r\n        type=\"button\"\r\n        title=\"Quit\"\r\n        onClick={onLogout}\r\n      ></ImageButton>\r\n    </SettingsContainer>\r\n    {userPic && <ImageStyled src={userPic}></ImageStyled>}\r\n  </RightSideContainer>\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/gameReducer.ts":{"language":"typescript","mutants":[{"id":"242","location":{"end":{"column":2,"line":33},"start":{"column":59,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"243","location":{"end":{"column":30,"line":10},"start":{"column":28,"line":10}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"244","location":{"end":{"column":34,"line":11},"start":{"column":33,"line":11}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Killed"},{"id":"245","location":{"end":{"column":44,"line":12},"start":{"column":43,"line":12}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Killed"},{"id":"246","location":{"end":{"column":37,"line":12},"start":{"column":36,"line":12}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Killed"},{"id":"247","location":{"end":{"column":30,"line":15},"start":{"column":18,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"248","location":{"end":{"column":21,"line":15},"start":{"column":20,"line":15}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"249","location":{"end":{"column":21,"line":15},"start":{"column":20,"line":15}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"251","location":{"end":{"column":3,"line":31},"start":{"column":37,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"252","location":{"end":{"column":35,"line":16},"start":{"column":33,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"253","location":{"end":{"column":34,"line":18},"start":{"column":19,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"254","location":{"end":{"column":22,"line":18},"start":{"column":21,"line":18}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"255","location":{"end":{"column":22,"line":18},"start":{"column":21,"line":18}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"257","location":{"end":{"column":4,"line":29},"start":{"column":41,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"258","location":{"end":{"column":57,"line":21},"start":{"column":8,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"259","location":{"end":{"column":57,"line":21},"start":{"column":8,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"250","location":{"end":{"column":35,"line":15},"start":{"column":32,"line":15}},"mutatorName":"UpdateOperator","replacement":"y--","status":"Timeout"},{"id":"260","location":{"end":{"column":42,"line":21},"start":{"column":40,"line":21}},"mutatorName":"EqualityOperator","replacement":"<","status":"Survived"},{"id":"261","location":{"end":{"column":42,"line":21},"start":{"column":40,"line":21}},"mutatorName":"EqualityOperator","replacement":">","status":"Survived"},{"id":"263","location":{"end":{"column":5,"line":26},"start":{"column":59,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"256","location":{"end":{"column":39,"line":18},"start":{"column":36,"line":18}},"mutatorName":"UpdateOperator","replacement":"x--","status":"Timeout"},{"id":"264","location":{"end":{"column":17,"line":22},"start":{"column":5,"line":22}},"mutatorName":"UpdateOperator","replacement":"aliveCount--","status":"Killed"},{"id":"262","location":{"end":{"column":34,"line":21},"start":{"column":33,"line":21}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Killed"},{"id":"265","location":{"end":{"column":36,"line":23},"start":{"column":9,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"267","location":{"end":{"column":22,"line":23},"start":{"column":20,"line":23}},"mutatorName":"EqualityOperator","replacement":"<","status":"Survived"},{"id":"268","location":{"end":{"column":22,"line":23},"start":{"column":20,"line":23}},"mutatorName":"EqualityOperator","replacement":">","status":"Killed"},{"id":"269","location":{"end":{"column":6,"line":25},"start":{"column":38,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"266","location":{"end":{"column":36,"line":23},"start":{"column":9,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"270","location":{"end":{"column":34,"line":30},"start":{"column":15,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"271","location":{"end":{"column":2,"line":42},"start":{"column":48,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"272","location":{"end":{"column":2,"line":62},"start":{"column":41,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"273","location":{"end":{"column":18,"line":56},"start":{"column":13,"line":56}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"274","location":{"end":{"column":26,"line":57},"start":{"column":21,"line":57}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"275","location":{"end":{"column":13,"line":58},"start":{"column":11,"line":58}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"276","location":{"end":{"column":13,"line":60},"start":{"column":11,"line":60}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"277","location":{"end":{"column":24,"line":61},"start":{"column":22,"line":61}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Killed"},{"id":"278","location":{"end":{"column":2,"line":78},"start":{"column":6,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"279","location":{"end":{"column":60,"line":69},"start":{"column":6,"line":69}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"280","location":{"end":{"column":60,"line":69},"start":{"column":6,"line":69}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"281","location":{"end":{"column":44,"line":69},"start":{"column":41,"line":69}},"mutatorName":"EqualityOperator","replacement":"===","status":"Killed"},{"id":"282","location":{"end":{"column":3,"line":76},"start":{"column":62,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"283","location":{"end":{"column":32,"line":70},"start":{"column":19,"line":70}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"284","location":{"end":{"column":48,"line":71},"start":{"column":20,"line":71}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"285","location":{"end":{"column":42,"line":73},"start":{"column":23,"line":73}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"286","location":{"end":{"column":2,"line":144},"start":{"column":31,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"287","location":{"end":{"column":14,"line":81},"start":{"column":8,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"288","location":{"end":{"column":3,"line":143},"start":{"column":12,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"289","location":{"end":{"column":4,"line":90},"start":{"column":19,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"290","location":{"end":{"column":26,"line":85},"start":{"column":22,"line":85}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"291","location":{"end":{"column":33,"line":87},"start":{"column":20,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"292","location":{"end":{"column":4,"line":93},"start":{"column":19,"line":91}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"293","location":{"end":{"column":27,"line":92},"start":{"column":22,"line":92}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"294","location":{"end":{"column":4,"line":96},"start":{"column":39,"line":94}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"295","location":{"end":{"column":4,"line":102},"start":{"column":16,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"296","location":{"end":{"column":33,"line":100},"start":{"column":20,"line":100}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"297","location":{"end":{"column":4,"line":105},"start":{"column":29,"line":103}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"298","location":{"end":{"column":4,"line":112},"start":{"column":30,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"299","location":{"end":{"column":33,"line":110},"start":{"column":20,"line":110}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"300","location":{"end":{"column":4,"line":118},"start":{"column":27,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"301","location":{"end":{"column":30,"line":117},"start":{"column":4,"line":117}},"mutatorName":"UpdateOperator","replacement":"state.currentHistoryStep--","status":"Killed"},{"id":"302","location":{"end":{"column":4,"line":128},"start":{"column":32,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"303","location":{"end":{"column":30,"line":127},"start":{"column":4,"line":127}},"mutatorName":"UpdateOperator","replacement":"state.currentHistoryStep--","status":"Killed"},{"id":"304","location":{"end":{"column":4,"line":135},"start":{"column":19,"line":129}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"305","location":{"end":{"column":79,"line":130},"start":{"column":8,"line":130}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"306","location":{"end":{"column":79,"line":130},"start":{"column":8,"line":130}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"307","location":{"end":{"column":27,"line":130},"start":{"column":25,"line":130}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"},{"id":"308","location":{"end":{"column":24,"line":130},"start":{"column":8,"line":130}},"mutatorName":"BooleanLiteral","replacement":"state.isPlaying","status":"Killed"},{"id":"309","location":{"end":{"column":54,"line":130},"start":{"column":53,"line":130}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"310","location":{"end":{"column":54,"line":130},"start":{"column":53,"line":130}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"311","location":{"end":{"column":77,"line":130},"start":{"column":76,"line":130}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"312","location":{"end":{"column":5,"line":134},"start":{"column":81,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"313","location":{"end":{"column":31,"line":132},"start":{"column":5,"line":132}},"mutatorName":"UpdateOperator","replacement":"state.currentHistoryStep--","status":"Killed"},{"id":"314","location":{"end":{"column":4,"line":142},"start":{"column":19,"line":136}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"315","location":{"end":{"column":56,"line":137},"start":{"column":8,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"316","location":{"end":{"column":56,"line":137},"start":{"column":8,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"317","location":{"end":{"column":27,"line":137},"start":{"column":25,"line":137}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"318","location":{"end":{"column":24,"line":137},"start":{"column":8,"line":137}},"mutatorName":"BooleanLiteral","replacement":"state.isPlaying","status":"Killed"},{"id":"319","location":{"end":{"column":54,"line":137},"start":{"column":53,"line":137}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"320","location":{"end":{"column":54,"line":137},"start":{"column":53,"line":137}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"323","location":{"end":{"column":2,"line":166},"start":{"column":30,"line":160}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"321","location":{"end":{"column":5,"line":141},"start":{"column":58,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"322","location":{"end":{"column":31,"line":139},"start":{"column":5,"line":139}},"mutatorName":"UpdateOperator","replacement":"state.currentHistoryStep++","status":"Killed"},{"id":"324","location":{"end":{"column":49,"line":161},"start":{"column":12,"line":161}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"325","location":{"end":{"column":43,"line":162},"start":{"column":9,"line":162}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"326","location":{"end":{"column":55,"line":163},"start":{"column":17,"line":163}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"327","location":{"end":{"column":85,"line":164},"start":{"column":15,"line":164}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"328","location":{"end":{"column":85,"line":164},"start":{"column":39,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"329","location":{"end":{"column":85,"line":164},"start":{"column":39,"line":164}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"330","location":{"end":{"column":57,"line":164},"start":{"column":55,"line":164}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"},{"id":"331","location":{"end":{"column":54,"line":164},"start":{"column":39,"line":164}},"mutatorName":"BooleanLiteral","replacement":"game.isPlaying","status":"Killed"},{"id":"332","location":{"end":{"column":85,"line":164},"start":{"column":58,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"333","location":{"end":{"column":85,"line":164},"start":{"column":58,"line":164}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"334","location":{"end":{"column":83,"line":164},"start":{"column":82,"line":164}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"335","location":{"end":{"column":83,"line":164},"start":{"column":82,"line":164}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"336","location":{"end":{"column":107,"line":165},"start":{"column":15,"line":165}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"337","location":{"end":{"column":107,"line":165},"start":{"column":39,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"338","location":{"end":{"column":107,"line":165},"start":{"column":39,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"339","location":{"end":{"column":57,"line":165},"start":{"column":55,"line":165}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"},{"id":"340","location":{"end":{"column":54,"line":165},"start":{"column":39,"line":165}},"mutatorName":"BooleanLiteral","replacement":"game.isPlaying","status":"Killed"},{"id":"341","location":{"end":{"column":107,"line":165},"start":{"column":58,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"342","location":{"end":{"column":107,"line":165},"start":{"column":58,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"343","location":{"end":{"column":83,"line":165},"start":{"column":82,"line":165}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"344","location":{"end":{"column":83,"line":165},"start":{"column":82,"line":165}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"345","location":{"end":{"column":105,"line":165},"start":{"column":104,"line":165}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"346","location":{"end":{"column":2,"line":181},"start":{"column":86,"line":168}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"347","location":{"end":{"column":31,"line":170},"start":{"column":3,"line":170}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"348","location":{"end":{"column":31,"line":170},"start":{"column":10,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"349","location":{"end":{"column":31,"line":170},"start":{"column":10,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"350","location":{"end":{"column":15,"line":170},"start":{"column":12,"line":170}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"351","location":{"end":{"column":60,"line":175},"start":{"column":6,"line":173}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"352","location":{"end":{"column":60,"line":175},"start":{"column":6,"line":173}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"353","location":{"end":{"column":63,"line":174},"start":{"column":61,"line":174}},"mutatorName":"LogicalOperator","replacement":"&&","status":"Killed"},{"id":"354","location":{"end":{"column":59,"line":174},"start":{"column":7,"line":173}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"355","location":{"end":{"column":59,"line":174},"start":{"column":7,"line":173}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"356","location":{"end":{"column":37,"line":173},"start":{"column":35,"line":173}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"357","location":{"end":{"column":34,"line":173},"start":{"column":7,"line":173}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"358","location":{"end":{"column":34,"line":173},"start":{"column":7,"line":173}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"359","location":{"end":{"column":18,"line":173},"start":{"column":15,"line":173}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"360","location":{"end":{"column":58,"line":174},"start":{"column":4,"line":174}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"361","location":{"end":{"column":58,"line":174},"start":{"column":4,"line":174}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"362","location":{"end":{"column":32,"line":174},"start":{"column":30,"line":174}},"mutatorName":"LogicalOperator","replacement":"&&","status":"Killed"},{"id":"363","location":{"end":{"column":29,"line":174},"start":{"column":4,"line":174}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"364","location":{"end":{"column":29,"line":174},"start":{"column":4,"line":174}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"365","location":{"end":{"column":27,"line":174},"start":{"column":24,"line":174}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"366","location":{"end":{"column":58,"line":174},"start":{"column":33,"line":174}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"368","location":{"end":{"column":56,"line":174},"start":{"column":53,"line":174}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"367","location":{"end":{"column":58,"line":174},"start":{"column":33,"line":174}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"370","location":{"end":{"column":59,"line":175},"start":{"column":4,"line":175}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"369","location":{"end":{"column":59,"line":175},"start":{"column":4,"line":175}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"371","location":{"end":{"column":33,"line":175},"start":{"column":31,"line":175}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"372","location":{"end":{"column":30,"line":175},"start":{"column":4,"line":175}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"373","location":{"end":{"column":30,"line":175},"start":{"column":4,"line":175}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"374","location":{"end":{"column":15,"line":175},"start":{"column":12,"line":175}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"375","location":{"end":{"column":59,"line":175},"start":{"column":34,"line":175}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"376","location":{"end":{"column":59,"line":175},"start":{"column":34,"line":175}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"377","location":{"end":{"column":57,"line":175},"start":{"column":54,"line":175}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"378","location":{"end":{"column":3,"line":178},"start":{"column":4,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"379","location":{"end":{"column":3,"line":187},"start":{"column":2,"line":184}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"380","location":{"end":{"column":52,"line":185},"start":{"column":3,"line":185}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"381","location":{"end":{"column":46,"line":186},"start":{"column":3,"line":186}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"382","location":{"end":{"column":3,"line":190},"start":{"column":20,"line":188}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"383","location":{"end":{"column":37,"line":189},"start":{"column":36,"line":189}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"384","location":{"end":{"column":18,"line":189},"start":{"column":17,"line":189}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"385","location":{"end":{"column":32,"line":189},"start":{"column":31,"line":189}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"386","location":{"end":{"column":27,"line":189},"start":{"column":26,"line":189}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"387","location":{"end":{"column":3,"line":197},"start":{"column":2,"line":194}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"388","location":{"end":{"column":49,"line":195},"start":{"column":3,"line":195}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"389","location":{"end":{"column":47,"line":196},"start":{"column":3,"line":196}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"390","location":{"end":{"column":3,"line":200},"start":{"column":21,"line":198}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"391","location":{"end":{"column":38,"line":199},"start":{"column":37,"line":199}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"392","location":{"end":{"column":19,"line":199},"start":{"column":18,"line":199}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"393","location":{"end":{"column":33,"line":199},"start":{"column":32,"line":199}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"394","location":{"end":{"column":28,"line":199},"start":{"column":27,"line":199}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"395","location":{"end":{"column":47,"line":204},"start":{"column":2,"line":204}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"396","location":{"end":{"column":3,"line":255},"start":{"column":26,"line":205}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"397","location":{"end":{"column":13,"line":211},"start":{"column":24,"line":206}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"398","location":{"end":{"column":13,"line":207},"start":{"column":4,"line":207}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"399","location":{"end":{"column":13,"line":207},"start":{"column":4,"line":207}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"400","location":{"end":{"column":11,"line":207},"start":{"column":10,"line":207}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"401","location":{"end":{"column":11,"line":207},"start":{"column":10,"line":207}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"402","location":{"end":{"column":35,"line":209},"start":{"column":7,"line":209}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"403","location":{"end":{"column":35,"line":209},"start":{"column":7,"line":209}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"404","location":{"end":{"column":14,"line":209},"start":{"column":13,"line":209}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"405","location":{"end":{"column":14,"line":209},"start":{"column":13,"line":209}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"406","location":{"end":{"column":5,"line":252},"start":{"column":9,"line":219}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"407","location":{"end":{"column":7,"line":246},"start":{"column":11,"line":226}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"409","location":{"end":{"column":9,"line":234},"start":{"column":7,"line":228}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"408","location":{"end":{"column":41,"line":227},"start":{"column":39,"line":227}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"410","location":{"end":{"column":9,"line":234},"start":{"column":7,"line":228}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"411","location":{"end":{"column":31,"line":228},"start":{"column":29,"line":228}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"412","location":{"end":{"column":25,"line":228},"start":{"column":24,"line":228}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"413","location":{"end":{"column":30,"line":230},"start":{"column":29,"line":230}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"414","location":{"end":{"column":34,"line":231},"start":{"column":33,"line":231}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"415","location":{"end":{"column":34,"line":232},"start":{"column":33,"line":232}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"416","location":{"end":{"column":9,"line":241},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"417","location":{"end":{"column":9,"line":241},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"418","location":{"end":{"column":31,"line":235},"start":{"column":29,"line":235}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"419","location":{"end":{"column":25,"line":235},"start":{"column":24,"line":235}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"420","location":{"end":{"column":30,"line":237},"start":{"column":29,"line":237}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"422","location":{"end":{"column":34,"line":239},"start":{"column":33,"line":239}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"421","location":{"end":{"column":34,"line":238},"start":{"column":33,"line":238}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"423","location":{"end":{"column":74,"line":242},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"424","location":{"end":{"column":74,"line":242},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"425","location":{"end":{"column":33,"line":242},"start":{"column":31,"line":242}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"426","location":{"end":{"column":27,"line":242},"start":{"column":26,"line":242}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"427","location":{"end":{"column":70,"line":242},"start":{"column":69,"line":242}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Killed"},{"id":"428","location":{"end":{"column":74,"line":243},"start":{"column":7,"line":243}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"429","location":{"end":{"column":74,"line":243},"start":{"column":7,"line":243}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"430","location":{"end":{"column":33,"line":243},"start":{"column":31,"line":243}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"431","location":{"end":{"column":27,"line":243},"start":{"column":26,"line":243}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"432","location":{"end":{"column":70,"line":243},"start":{"column":69,"line":243}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Killed"},{"id":"433","location":{"end":{"column":8,"line":247},"start":{"column":6,"line":247}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"434","location":{"end":{"column":38,"line":250},"start":{"column":19,"line":250}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"435","location":{"end":{"column":6,"line":253},"start":{"column":4,"line":253}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"}],"source":"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createSelector } from \"reselect\";\r\nimport { CellRow } from \".\";\r\nimport { CellState } from \"@/components/Cell\";\r\nimport { AppState } from \"@/store\";\r\nimport { GameSettings } from \"@/components/SettingsPanel\";\r\n\r\nexport const getRandomField = (settings: GameSettings) => {\r\n\tconst { columnCount, rowCount, fillingPercent } = settings;\r\n\tconst result: CellRow[] = [];\r\n\tconst cellsCount = columnCount * rowCount;\r\n\tconst maxAliveCount = (cellsCount / 100) * fillingPercent;\r\n\tlet aliveCount = 0;\r\n\r\n\tfor (let y = 0; y < rowCount; y++) {\r\n\t\tconst rowCells: CellState[] = [];\r\n\r\n\t\tfor (let x = 0; x < columnCount; x++) {\r\n\t\t\tlet cellState = CellState.dead;\r\n\r\n\t\t\tif (Math.round(Math.random() * 100) <= fillingPercent) {\r\n\t\t\t\taliveCount++;\r\n\t\t\t\tif (aliveCount <= maxAliveCount) {\r\n\t\t\t\t\tcellState = CellState.alive;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trowCells.push(cellState);\r\n\t\t}\r\n\t\tresult.push({ cells: rowCells });\r\n\t}\r\n\treturn result;\r\n};\r\n\r\nexport const initSettingsState: GameSettings = {\r\n\theight: 350,\r\n\twidth: 350,\r\n\trowCount: 10,\r\n\tcolumnCount: 10,\r\n\tfillingPercent: 30,\r\n\tfrequency: 10,\r\n};\r\n\r\nexport interface GameState {\r\n\tsettings: GameSettings;\r\n\tisPlaying: boolean;\r\n\tisSettingsVisible: boolean;\r\n\tuserpic: string;\r\n\tfield: CellRow[];\r\n\thistory: CellRow[][];\r\n\tcurrentHistoryStep: number;\r\n}\r\n\r\nexport const initGameState: GameState = {\r\n\tsettings: initSettingsState,\r\n\tisPlaying: false,\r\n\tisSettingsVisible: false,\r\n\tuserpic: \"\",\r\n\tfield: getRandomField(initSettingsState),\r\n\thistory: [],\r\n\tcurrentHistoryStep: -1\r\n};\r\n\r\nconst makeCellAliveField = (\r\n\toldField: CellRow[],\r\n\tcolIndex: number,\r\n\trowIndex: number\r\n) => {\r\n\tif (oldField[rowIndex].cells[colIndex] !== CellState.alive) {\r\n\t\tconst newRows = [...oldField];\r\n\t\tconst rowCells = [...newRows[rowIndex].cells];\r\n\t\trowCells[colIndex] = CellState.alive;\r\n\t\tnewRows[rowIndex] = { cells: rowCells };\r\n\r\n\t\treturn newRows;\r\n\t}\r\n\treturn oldField;\r\n};\r\n\r\nconst gameSlice = createSlice({\r\n\tname: \"game\",\r\n\tinitialState: initGameState,\r\n\treducers: {\r\n\t\tplayGame(state) {\r\n\t\t\tstate.isPlaying = true;\r\n\r\n\t\t\tstate.history = [state.field];\r\n\t\t\t\r\n\t\t\tstate.currentHistoryStep = 0;\r\n\t\t},\r\n\t\tstopGame(state) {\r\n\t\t\tstate.isPlaying = false;\r\n\t\t},\r\n\t\tsetIsSettingsVisible(state, action) {\r\n\t\t\tstate.isSettingsVisible = action.payload;\r\n\t\t},\r\n\t\treset(state) {\r\n\t\t\tstate.field = getRandomField(state.settings);\r\n\r\n\t\t\tstate.history = [state.field];\r\n\t\t\tstate.currentHistoryStep = 0;\r\n\t\t},\r\n\t\tsetUserpic(state, action) {\r\n\t\t\tstate.userpic = action.payload;\r\n\t\t},\r\n\t\tsetSettings(state, action) {\r\n\t\t\tstate.settings = action.payload;\r\n\t\t\tstate.field = getRandomField(action.payload);\r\n\r\n\t\t\tstate.history = [state.field];\r\n\t\t\tstate.currentHistoryStep = 0;\r\n\t\t},\r\n\t\tsetField(state, action) {\r\n\t\t\tstate.field = action.payload;\r\n\r\n\t\t\tstate.history.push(state.field);\r\n\t\t\tstate.currentHistoryStep++;\r\n\t\t},\r\n\t\tmakeCellAlive(state, action) {\r\n\t\t\tstate.field = makeCellAliveField(\r\n\t\t\t\tstate.field,\r\n\t\t\t\taction.payload.colIndex,\r\n\t\t\t\taction.payload.rowIndex\r\n\t\t\t);\r\n\r\n\t\t\tstate.history.push(state.field);\r\n\t\t\tstate.currentHistoryStep++;\r\n\t\t},\r\n\t\tnextStep(state) {\r\n\t\t\tif (!state.isPlaying && state.currentHistoryStep < state.history.length - 1) {\r\n\r\n\t\t\t\tstate.currentHistoryStep++;\r\n\t\t\t\tstate.field = state.history[state.currentHistoryStep];\r\n\t\t\t}\r\n\t\t},\r\n\t\tprevStep(state) {\r\n\t\t\tif (!state.isPlaying && state.currentHistoryStep > 0) {\r\n\r\n\t\t\t\tstate.currentHistoryStep--;\r\n\t\t\t\tstate.field = state.history[state.currentHistoryStep];\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetSettings,\r\n\tplayGame,\r\n\tstopGame,\r\n\tsetIsSettingsVisible,\r\n\treset,\r\n\tsetUserpic,\r\n\tsetField,\r\n\tmakeCellAlive,\r\n\tnextStep,\r\n\tprevStep,\r\n} = gameSlice.actions;\r\nexport const gameReducer = gameSlice.reducer;\r\n\r\nexport const gameSelectors = {\r\n\tsettings: ({ game }: AppState) => game.settings,\r\n\tfield: ({ game }: AppState) => game.field,\r\n\tgameIsPlaying: ({ game }: AppState) => game.isPlaying,\r\n\thasPrevStep: ({ game }: AppState) => !game.isPlaying && game.currentHistoryStep > 0,\r\n\thasNextStep: ({ game }: AppState) => !game.isPlaying && game.currentHistoryStep < game.history.length - 1,\r\n};\r\n\r\nconst getNextCellState = (oldCell: CellState, neighbours: CellState[]): CellState => {\r\n\tconst aliveNeighbourCount = neighbours.filter(\r\n\t\t(x) => x === CellState.alive\r\n\t).length;\r\n\r\n\tif ((oldCell === CellState.alive &&\r\n\t\t(aliveNeighbourCount === 2 || aliveNeighbourCount === 3)) ||\r\n\t\t(oldCell === CellState.dead && aliveNeighbourCount === 3)\r\n\t) {\r\n\t\treturn CellState.alive;\r\n\t}\r\n\r\n\treturn CellState.dead;\r\n}\r\n\r\nexport const getCellWidth = createSelector(\r\n\t[\r\n\t\t({ game }: AppState) => game.settings.columnCount,\r\n\t\t({ game }: AppState) => game.settings.width,\r\n\t],\r\n\t(count, width) => {\r\n\t\treturn (width - (count + 1) * 4) / count;\r\n\t}\r\n);\r\n\r\nexport const getCellHeight = createSelector(\r\n\t[\r\n\t\t({ game }: AppState) => game.settings.rowCount,\r\n\t\t({ game }: AppState) => game.settings.height,\r\n\t],\r\n\t(count, height) => {\r\n\t\treturn (height - (count + 1) * 4) / count;\r\n\t}\r\n);\r\n\r\nexport const getNextGeneration = createSelector(\r\n\t[gameSelectors.field, gameSelectors.settings],\r\n\t(oldField, settings) => {\r\n\t\tconst getCellIndex = (index: number) =>\r\n\t\t\tindex < 0\r\n\t\t\t\t? 0\r\n\t\t\t\t: index > settings.columnCount\r\n\t\t\t\t\t? settings.columnCount\r\n\t\t\t\t\t: index;\r\n\r\n\t\treturn oldField.reduce(\r\n\t\t\t(\r\n\t\t\t\tnewField: CellRow[],\r\n\t\t\t\tcurrentRow: CellRow,\r\n\t\t\t\trowIndex: number,\r\n\t\t\t\tallRows: CellRow[]\r\n\t\t\t) => {\r\n\t\t\t\tconst newCells = currentRow.cells.reduce(\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tnewRowCells: CellState[],\r\n\t\t\t\t\t\tcurrentCell: CellState,\r\n\t\t\t\t\t\tcellIndex: number,\r\n\t\t\t\t\t\tallCells: CellState[]\r\n\t\t\t\t\t) => {\r\n\t\t\t\t\t\tconst neighbours: CellState[] = [];\r\n\t\t\t\t\t\tallRows[rowIndex - 1] &&\r\n\t\t\t\t\t\t\tneighbours.push(\r\n\t\t\t\t\t\t\t\t...allRows[rowIndex - 1].cells.slice(\r\n\t\t\t\t\t\t\t\t\tgetCellIndex(cellIndex - 1),\r\n\t\t\t\t\t\t\t\t\tgetCellIndex(cellIndex + 2)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\tallRows[rowIndex + 1] &&\r\n\t\t\t\t\t\t\tneighbours.push(\r\n\t\t\t\t\t\t\t\t...allRows[rowIndex + 1].cells.slice(\r\n\t\t\t\t\t\t\t\t\tgetCellIndex(cellIndex - 1),\r\n\t\t\t\t\t\t\t\t\tgetCellIndex(cellIndex + 2)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\tallCells[cellIndex - 1] && neighbours.push(allCells[cellIndex - 1]);\r\n\t\t\t\t\t\tallCells[cellIndex + 1] && neighbours.push(allCells[cellIndex + 1]);\r\n\t\t\t\t\t\tnewRowCells.push(getNextCellState(currentCell, neighbours));\r\n\t\t\t\t\t\treturn newRowCells;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t[]\r\n\t\t\t\t);\r\n\r\n\t\t\t\tnewField.push({ cells: newCells });\r\n\t\t\t\treturn newField;\r\n\t\t\t},\r\n\t\t\t[]\r\n\t\t);\r\n\t}\r\n);\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/modules/Game/gameSaga.ts":{"language":"typescript","mutants":[{"id":"436","location":{"end":{"column":2,"line":20},"start":{"column":24,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"437","location":{"end":{"column":13,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"438","location":{"end":{"column":13,"line":14},"start":{"column":9,"line":14}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"440","location":{"end":{"column":26,"line":18},"start":{"column":25,"line":18}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"441","location":{"end":{"column":2,"line":26},"start":{"column":26,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"442","location":{"end":{"column":2,"line":30},"start":{"column":27,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"443","location":{"end":{"column":2,"line":34},"start":{"column":29,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"444","location":{"end":{"column":29,"line":33},"start":{"column":12,"line":33}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"439","location":{"end":{"column":3,"line":19},"start":{"column":15,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"import {\r\n\tput,\r\n\tselect,\r\n\ttakeEvery,\r\n\ttake,\r\n\tall,\r\n\tfork,\r\n\tdelay,\r\n\tcancel,\r\n} from \"redux-saga/effects\";\r\nimport { setField, gameSelectors, getNextGeneration, playGame, stopGame } from \"./gameReducer\";\r\n\r\nfunction* playWorker() {\r\n\twhile (true) {\r\n\t\tconst { frequency } = yield select(gameSelectors.settings);\r\n\t\tconst nextFieldRows = yield select(getNextGeneration);\r\n\t\tyield put(setField(nextFieldRows));\r\n\t\tyield delay(frequency * 100);\r\n\t}\r\n}\r\n\r\nfunction* playGameFlow() {\r\n\tconst playTask = yield fork(playWorker);\r\n\tyield take(stopGame.type);\r\n\tyield cancel(playTask);\r\n}\r\n\r\nfunction* startGameSaga() {\r\n\tyield takeEvery(playGame.type, playGameFlow);\r\n}\r\n\r\nexport function* gameSaga() {\r\n\tyield all([startGameSaga()]);\r\n}\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/screens/AuthScreen.tsx":{"language":"typescript","mutants":[{"id":"445","location":{"end":{"column":41,"line":4},"start":{"column":27,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from \"react\";\r\nimport { Auth } from \"@/modules/Auth\";\r\n\r\nexport const AuthScreen = () => <Auth />;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/screens/GameScreen.tsx":{"language":"typescript","mutants":[{"id":"446","location":{"end":{"column":41,"line":4},"start":{"column":27,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from \"react\";\r\nimport { Game } from \"@/modules/Game\";\r\n\r\nexport const GameScreen = () => <Game />;\r\n"},"/mnt/d/work/Otus_react/otus_react_game_of_life/src/store.ts":{"language":"typescript","mutants":[{"id":"447","location":{"end":{"column":2,"line":16},"start":{"column":32,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"448","location":{"end":{"column":2,"line":23},"start":{"column":40,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"449","location":{"end":{"column":46,"line":25},"start":{"column":37,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"450","location":{"end":{"column":2,"line":32},"start":{"column":57,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"451","location":{"end":{"column":35,"line":27},"start":{"column":7,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"453","location":{"end":{"column":22,"line":27},"start":{"column":19,"line":27}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"454","location":{"end":{"column":4,"line":29},"start":{"column":37,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"455","location":{"end":{"column":35,"line":28},"start":{"column":13,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"452","location":{"end":{"column":35,"line":27},"start":{"column":7,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"456","location":{"end":{"column":2,"line":37},"start":{"column":22,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"457","location":{"end":{"column":2,"line":42},"start":{"column":37,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"458","location":{"end":{"column":31,"line":41},"start":{"column":15,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"RuntimeError"}],"source":"import {\n  configureStore,\n  combineReducers,\n  createAction,\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fork } from \"redux-saga/effects\";\nimport { gameReducer, gameSaga } from \"./modules/Game\";\nimport { initGameState } from \"./modules/Game/gameReducer\";\nimport { authReducer, initAuthState } from \"./modules/Auth/authReducer\";\nimport { authSaga } from \"./modules/Auth/authSaga\";\n\nexport const initialAppState = {\n  game: initGameState,\n  auth: initAuthState,\n};\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport const reducer = combineReducers({\n  game: gameReducer,\n  auth: authReducer,\n});\n\nexport const restore = createAction(\"restore\");\nexport const rootReducer = (state: any, action: any) => {\n  if (action.type === restore.type) {\n    state = { ...initialAppState };\n  }\n\n  return reducer(state, action);\n};\n\nfunction* rootSaga() {\n  yield fork(gameSaga);\n  yield fork(authSaga);\n}\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppState = ReturnType<typeof reducer>;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};